Задачи распределены на 3 уровня.
Все пишеться в 1 репозиторий и 1 задача == 1 коммит.
Так же для каждой задачи надо написать набор тестов.
После решения задачки, мне в личку высылайте ссылку на коммит
Удачи!

Уровень 1

1.Дан массив чисел. Вернуть число уникальных символов
Пример: для 1 4 5 1 1 3 ответ 4.

2.Ход коня по бесконечной шахматной доске. Вводится текущее положение коня и клетка в которую пробуют его передвинуть за 1 ход. Программа должна проверить, возможно ли это сделать.

3.Даны точки A,B,C  на плоскости.  Вычислить площадь  треугольника ABC.

Уровень 2
1.Учитывая строку, содержащую символы '(', ')', '{', '}', '[' и ']', определите, является ли входная строка допустимой.
Входная строка действительна, если:
Открытые скобки должны быть закрыты скобками того же типа.
Открытые скобки должны быть закрыты в правильном порядке.
Обратите внимание, что пустая строка также считается допустимой.

2. По заданному бинарному дереву найдите его максимальную глубину. Максимальная глубина - это количество узлов вдоль самого длинного пути от корневого узла до самого дальнего конечного узла.
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }


Уровень 3
Согласно статье в Википедии: «Игра Жизни, также известная просто как Жизнь, представляет собой клеточный автомат, созданный британским математиком Джоном Хортоном Конвеем в 1970 году». При наличии доски с, размерностью m на n ячеек каждая ячейка имеет начальное состояние live (1) или dead (0). Каждая ячейка взаимодействует со своими восемью соседями (по горизонтали, вертикали и диагонали), используя следующие четыре правила (взятые из вышеупомянутой статьи в Википедии): Любая живая ячейка с менее чем двумя живыми соседями умирает, как если бы она была вызвана недостаточным населением. Любая живая клетка с двумя или тремя живыми соседями доживает до следующего поколения. Любая живая клетка с более чем тремя живыми соседями умирает, как если бы она была перенаселена. Любая мертвая клетка с ровно тремя живыми соседями становится живой клеткой, как если бы она воспроизводилась. Напишите функцию для вычисления следующего состояния (после одного обновления) платы с учетом ее текущего состояния. Следующее состояние создается путем применения вышеуказанных правил одновременно к каждой ячейке в текущем состоянии, где рождения и смерти происходят одновременно.
